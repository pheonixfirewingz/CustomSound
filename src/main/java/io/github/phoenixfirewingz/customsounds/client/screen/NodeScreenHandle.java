package io.github.phoenixfirewingz.customsounds.client.screen;

import net.minecraft.block.entity.BlockEntity;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.entity.player.PlayerInventory;
import net.minecraft.item.ItemStack;
import net.minecraft.screen.ScreenHandler;
import net.minecraft.util.hit.BlockHitResult;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.RaycastContext;
import net.minecraft.world.World;
import org.jetbrains.annotations.NotNull;

import static io.github.phoenixfirewingz.customsounds.CustomSounds.SOUND_NODE_SCREEN_HANDLER_TYPE;

public class NodeScreenHandle extends ScreenHandler {
    protected final BlockEntity entity;

    //Generated by ChatGPT3 February 11th model
    private BlockPos getBlockLookingAt(PlayerEntity player) {
        World world = player.world;
        RaycastContext context = new RaycastContext(player.getCameraPosVec(1.0f), player.getCameraPosVec(1.0f).add(player.getRotationVector().multiply(5.0)), RaycastContext.ShapeType.OUTLINE, RaycastContext.FluidHandling.NONE, player);
        BlockHitResult result = world.raycast(context);
        return result.getBlockPos();
    }

    public NodeScreenHandle(int syncId, @NotNull PlayerInventory playerInventory) {
        super(SOUND_NODE_SCREEN_HANDLER_TYPE, syncId);
        PlayerEntity player = playerInventory.player;
        BlockPos pos = getBlockLookingAt(player);
        entity = player.world.getBlockEntity(pos);
    }

    @Override
    public ItemStack quickMove(PlayerEntity player, int slot) {
        return null;
    }

    @Override
    public boolean canUse(PlayerEntity player) {
        return player.isCreative();
    }
}